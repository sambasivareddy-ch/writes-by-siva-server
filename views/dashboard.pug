doctype html
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title Dashboard
        link(rel="stylesheet", href="/css/index.css")
        link(rel="preconnect", href="https://cdnjs.cloudflare.com")
        link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css',)
    body 
        include layout.pug
        .dashboard_wrapper 
            .dashboard_main 
                table.blog_table 
                    thead 
                        tr 
                            td.control Controls
                            td Slug 
                            td Title 
                            td Date
                            td Category
                            td Views
                            td Reactions
                            td Visible
                    tbody 
                        each row in blogs 
                            tr 
                                td 
                                    button.view(data-id=row.slug) 
                                        i.fa-solid.fa-eye
                                    button.del(data-id=row.slug) 
                                        i.fa-solid.fa-trash
                                    button.reset(data-id=row.slug)
                                        i.fa-solid.fa-clock-rotate-left
                                td(data-label="slug") 
                                    a(href=`https://www.bysiva.blog/blog/${row.slug}`, target="_blank", rel="noopener noreferrer") #{row.slug}
                                td(data-label="title") #{row.title}
                                td(data-label="date") #{new Date(row.date).toISOString().slice(0, 10).replace(/-/g, '/')}
                                td(data-label="primary_category") #{row.primary_category}
                                td(data-label="views") #{row.views}
                                td(data-label="likes") #{row.likes + row.fires + row.anger + row.laugh} 
                                td(data-lable="visible") #{row.visible ? 1: 0}
        
        script.
            document.addEventListener("DOMContentLoaded", function () {
                document.querySelectorAll("button.del").forEach(function (button) {
                button.addEventListener("click", async function () {
                    const id = button.getAttribute("data-id");
                    if (confirm("Are you sure you want to delete this blog?")) {
                    try {
                        const response = await fetch(`/delete/${id}`, {
                            method: "DELETE",
                        });
                        if (response.ok) {
                            button.closest("tr").remove();
                        } else {
                            alert("Failed to delete the blog");
                        }
                    } catch (err) {
                        alert("Error occurred");
                    }
                    }
                });
                });

                document.querySelectorAll("button.view").forEach(function (button) {
                button.addEventListener("click", async function () {
                    const slug_id = button.getAttribute("data-id");
                    window.location.href = `/blogbyid/${slug_id}`
                });
                });

                document.querySelectorAll("button.reset").forEach(function (button) {
                button.addEventListener("click", async function () {
                    const slug_id = button.getAttribute("data-id");
                    if (confirm("Are you sure you want to reset the likes of this blog?")) {
                    try {
                        const response = await fetch(`/resetlike/${slug_id}`, {
                            method: "PATCH",
                        });
                        if (response.ok) {
                            alert(`Resetted the likes of ${slug_id}`);
                        }
                    } catch (err) {
                        alert("Error occurred");
                    }
                    }
                });
                });
            });
